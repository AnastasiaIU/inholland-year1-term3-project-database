<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ConfirmDeletion" xml:space="preserve">
    <value>Confirm deletion</value>
  </data>
  <data name="DeletePrompt" xml:space="preserve">
    <value>Are you sure you want to delete {0}?</value>
  </data>
  <data name="Empty" xml:space="preserve">
    <value>stock empty</value>
  </data>
  <data name="ErrorMessage" xml:space="preserve">
    <value>Something went wrong: </value>
  </data>
  <data name="ErrorMessageActivityNotSelected" xml:space="preserve">
    <value>Need to select an activity.</value>
  </data>
  <data name="ErrorMessageDrinkNotSelected" xml:space="preserve">
    <value>Need to select a drink. </value>
  </data>
  <data name="ErrorMessageExistingStudentNumber" xml:space="preserve">
    <value>Another student already has that student number. Please enter another number.</value>
  </data>
  <data name="ErrorMessageLecturerNotSelected" xml:space="preserve">
    <value>Need to select a lecturer.</value>
  </data>
  <data name="ErrorMessageNoDataToShow" xml:space="preserve">
    <value>There is no data to show.</value>
  </data>
  <data name="ErrorMessageNoFirstName" xml:space="preserve">
    <value>Need to input a first name.</value>
  </data>
  <data name="ErrorMessageNoLastName" xml:space="preserve">
    <value>Need to input a last name.</value>
  </data>
  <data name="ErrorMessageNoName" xml:space="preserve">
    <value>Need to input a name. </value>
  </data>
  <data name="ErrorMessageStudentNotSelected" xml:space="preserve">
    <value>Need to select a student.</value>
  </data>
  <data name="ErrorMessageSupervisorNotSelected" xml:space="preserve">
    <value>Need to select a supervisor.</value>
  </data>
  <data name="ErrorMessageStudentNumberLength" xml:space="preserve">
    <value>Student number needs to be 6 numbers.</value>
  </data>
  <data name="ErrorMessageWrongClass" xml:space="preserve">
    <value>Need to input a class number.</value>
  </data>
  <data name="ErrorMessageWrongPrice" xml:space="preserve">
    <value>Wrong input for price. Needs to be a number.</value>
  </data>
  <data name="ErrorMessageWrongQuantityFormat" xml:space="preserve">
    <value>Wrong input for quantity. Needs to be a whole number.</value>
  </data>
  <data name="ErrorMessageWrongStock" xml:space="preserve">
    <value>Wrong input for stock. Needs to be a number.</value>
  </data>
  <data name="ErrorMessageWrongStudentNumber" xml:space="preserve">
    <value>Wrong input for student number. Needs to be only numbers.</value>
  </data>
  <data name="Lecturer" xml:space="preserve">
    <value>Lecturer</value>
  </data>
  <data name="MoneyFormat" xml:space="preserve">
    <value>C2</value>
  </data>
  <data name="NearlyDepleted" xml:space="preserve">
    <value>stock nearly depleted</value>
  </data>
  <data name="NewPurchase" xml:space="preserve">
    <value>New purchase.</value>
  </data>
  <data name="No" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="PanelName" xml:space="preserve">
    <value>pnl</value>
  </data>
  <assembly alias="System.Windows.Forms" name="System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="someren" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\someren.png;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="SomerenImage" xml:space="preserve">
    <value>someren.Image</value>
  </data>
  <data name="Student" xml:space="preserve">
    <value>Student</value>
  </data>
  <data name="SuccessfullyAdded" xml:space="preserve">
    <value>Successfully added: </value>
  </data>
  <data name="SuccessfullyDeleted" xml:space="preserve">
    <value>Successfully deleted: </value>
  </data>
  <data name="SuccessfullyEdited" xml:space="preserve">
    <value>Successfully edited: </value>
  </data>
  <data name="Sufficient" xml:space="preserve">
    <value>stock sufficient</value>
  </data>
  <data name="Yes" xml:space="preserve">
    <value>Yes</value>
  </data>
  <data name="Zero" xml:space="preserve">
    <value>0</value>
  </data>
</root>